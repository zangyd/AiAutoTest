name: Build Workflow

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  backend-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements/prod.txt
        pip install pytest pytest-cov mypy ruff
        
    - name: Run type checking
      run: |
        cd backend
        mypy .
        
    - name: Run linting
      run: |
        cd backend
        ruff check .
        
    - name: Run tests with coverage
      run: |
        cd backend
        pytest --cov=app --cov-report=xml
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage
        path: backend/coverage.xml
        
    - name: Build backend package
      run: |
        cd backend
        python -m build
        
    - name: Upload backend build
      uses: actions/upload-artifact@v3
      with:
        name: backend-dist
        path: backend/dist

  frontend-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run linting
      run: |
        cd frontend
        npm run lint
        
    - name: Run type checking
      run: |
        cd frontend
        npm run type-check
        
    - name: Run unit tests
      run: |
        cd frontend
        npm run test:unit -- --coverage
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage
        path: frontend/coverage
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Upload frontend build
      uses: actions/upload-artifact@v3
      with:
        name: frontend-dist
        path: frontend/dist

  docker-build:
    needs: [backend-build, frontend-build]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Download backend build
      uses: actions/download-artifact@v3
      with:
        name: backend-dist
        path: backend/dist
        
    - name: Download frontend build
      uses: actions/download-artifact@v3
      with:
        name: frontend-dist
        path: frontend/dist
        
    - name: Build backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: false
        tags: autotest/backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: false
        tags: autotest/frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  quality-report:
    needs: [backend-build, frontend-build]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all coverage reports
      uses: actions/download-artifact@v3
      
    - name: Generate quality report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Code Quality Report
        path: "**/*coverage.xml"
        reporter: java-junit
        fail-on-error: true 