// Jenkins流水线配置
pipeline {
    agent any
    
    environment {
        PYTHON_VERSION = '3.10'
        NODE_VERSION = '16'
    }
    
    options {
        // 保留构建历史
        buildDiscarder(logRotator(numToKeepStr: '10'))
        // 禁止并行构建
        disableConcurrentBuilds()
        // 添加时间戳
        timestamps()
    }
    
    stages {
        stage('环境准备') {
            steps {
                // 清理工作空间
                cleanWs()
                // 检出代码
                checkout scm
                
                // 配置Python环境
                bat """
                    python -m venv venv
                    call venv\\Scripts\\activate.bat
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt
                """
                
                // 配置Node环境
                bat """
                    npm install
                """
            }
        }
        
        stage('代码检查') {
            parallel {
                stage('Python代码检查') {
                    steps {
                        bat """
                            call venv\\Scripts\\activate.bat
                            flake8 backend
                            mypy backend
                        """
                    }
                }
                
                stage('前端代码检查') {
                    steps {
                        bat """
                            npm run lint
                        """
                    }
                }
            }
        }
        
        stage('单元测试') {
            parallel {
                stage('后端测试') {
                    steps {
                        bat """
                            call venv\\Scripts\\activate.bat
                            pytest backend/tests --junitxml=test-results/backend.xml
                        """
                    }
                }
                
                stage('前端测试') {
                    steps {
                        bat """
                            npm run test:unit
                        """
                    }
                }
            }
        }
        
        stage('构建') {
            parallel {
                stage('后端构建') {
                    steps {
                        bat """
                            call venv\\Scripts\\activate.bat
                            python setup.py build
                        """
                    }
                }
                
                stage('前端构建') {
                    steps {
                        bat """
                            npm run build
                        """
                    }
                }
            }
        }
        
        stage('部署') {
            when {
                branch 'main'
            }
            steps {
                // 部署步骤
                echo '开始部署...'
            }
        }
    }
    
    post {
        always {
            // 收集测试报告
            junit 'test-results/**/*.xml'
            
            // 清理环境
            bat """
                deactivate
            """
        }
        
        success {
            echo '构建成功!'
        }
        
        failure {
            echo '构建失败!'
        }
    }
} 